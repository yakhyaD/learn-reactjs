{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/yakhya/Desktop/learn react/blog-firebase/src/context/UserContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useContext, createContext, useEffect, useState } from 'react';\nimport { auth } from '../config/firebaseConfig';\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n\n  return useContext(AuthContext);\n};\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n\n  const [currentUser, setCurrentUser] = useState({});\n  const [loading, setLoading] = useState(true); // const register = (email, password) => (\n  //     auth.createUserWithEmailAndPassword(email, password)\n  // )\n\n  function register(email, password) {\n    return auth.createUserWithEmailAndPassword(email, password);\n  }\n\n  const login = (email, password) => auth.signInWithEmailAndPassword(email, password);\n\n  const logout = () => auth.logout();\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      register,\n      currentUser,\n      login,\n      logout,\n      loading\n    },\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(AuthProvider, \"VoBbfS/rCtfh1p5WUo/uy69QX+M=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/yakhya/Desktop/learn react/blog-firebase/src/context/UserContext.js"],"names":["useContext","createContext","useEffect","useState","auth","AuthContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","register","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","unsubscribe","onAuthStateChanged","user"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,aAArB,EAAoCC,SAApC,EAA+CC,QAA/C,QAA+D,OAA/D;AACA,SAASC,IAAT,QAAqB,0BAArB;AAEA,MAAMC,WAAW,gBAAGJ,aAAa,EAAjC;AAEA,OAAO,MAAMK,OAAO,GAAG;AAAA;;AAAA,SAAON,UAAU,CAACK,WAAD,CAAjB;AAAA,CAAhB;;GAAMC,O;;AAEb,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAE1C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC,CAH0C,CAK1C;AACA;AACA;;AACA,WAASU,QAAT,CAAkBC,KAAlB,EAAyBC,QAAzB,EAAmC;AAC/B,WAAQX,IAAI,CAACY,8BAAL,CAAoCF,KAApC,EAA2CC,QAA3C,CAAR;AACH;;AACD,QAAME,KAAK,GAAG,CAACH,KAAD,EAAQC,QAAR,KACVX,IAAI,CAACc,0BAAL,CAAgCJ,KAAhC,EAAuCC,QAAvC,CADJ;;AAGA,QAAMI,MAAM,GAAG,MACXf,IAAI,CAACe,MAAL,EADJ;;AAIAjB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMkB,WAAW,GAAGhB,IAAI,CAACiB,kBAAL,CAAwBC,IAAI,IAAI;AAChDZ,MAAAA,cAAc,CAACY,IAAD,CAAd;AACAV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAHmB,CAApB;AAIA,WAAOQ,WAAP;AACH,GANQ,EAMN,EANM,CAAT;AAQA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AACzBP,MAAAA,QADyB;AAEzBJ,MAAAA,WAFyB;AAGzBQ,MAAAA,KAHyB;AAIzBE,MAAAA,MAJyB;AAKzBR,MAAAA;AALyB,KAA7B;AAAA,cAOC,CAACA,OAAD,IAAYH;AAPb;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CArCM;;IAAMD,Y;;KAAAA,Y","sourcesContent":["import { useContext, createContext, useEffect, useState } from 'react'\nimport { auth } from '../config/firebaseConfig'\n\nconst AuthContext = createContext()\n\nexport const useAuth = () => (useContext(AuthContext)) \n\nexport const AuthProvider = ({ children }) => {\n\n    const [currentUser, setCurrentUser] = useState({})\n    const [loading, setLoading] = useState(true);\n\n    // const register = (email, password) => (\n    //     auth.createUserWithEmailAndPassword(email, password)\n    // )\n    function register(email, password) {\n        return  auth.createUserWithEmailAndPassword(email, password)\n    }\n    const login = (email, password) => (\n        auth.signInWithEmailAndPassword(email, password)\n    )\n    const logout = () => (\n        auth.logout()\n    )\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            setCurrentUser(user)\n            setLoading(false)\n        })\n        return unsubscribe\n    }, [])\n\n    return (\n        <AuthContext.Provider value={{\n            register,\n            currentUser,\n            login,\n            logout,\n            loading\n        }}>\n        {!loading && children}\n        </AuthContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}