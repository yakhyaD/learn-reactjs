{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/yakhya/Desktop/learn react/blog-firebase/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst Register = () => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password1, setPassword1] = useState('');\n  const [password2, setPassword2] = useState('');\n\n  const validation = (name, pwd1, pwd2) => {\n    const errors = [];\n\n    if (name.length < 6) {\n      errors.push({\n        \"name\": \"username must be a least 6 characters\"\n      });\n    } else if (pwd1 !== pwd2) {\n      errors.push({\n        \"password\": \"passwords doesn't match\"\n      });\n    }\n\n    return errors;\n  };\n\n  const errors = validation(username, password1, password2);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (errors.length > 0) {\n      return errors;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Full Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        autoFocus: true,\n        name: \"title\",\n        type: \"text\",\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), errors[\"username\"] && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: errors[username]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        autoFocus: true,\n        name: \"title\",\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        autoFocus: true,\n        name: \"title\",\n        type: \"text\",\n        onChange: e => setPassword2(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), errors[\"password\"] && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: errors[password]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Confirm Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        autoFocus: true,\n        name: \"title\",\n        type: \"text\",\n        onChange: e => setPassword2(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), errors[\"password\"] && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: errors[password]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"btn\",\n      type: \"submit\",\n      value: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"YWPRTKknBLnD/gw/4W6obWrzt98=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/yakhya/Desktop/learn react/blog-firebase/src/components/Register.js"],"names":["useState","Register","username","setUsername","password1","setPassword1","password2","setPassword2","validation","name","pwd1","pwd2","errors","length","push","handleSubmit","e","preventDefault","target","value","password"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n\nconst Register = () => {\n    const [username, setUsername] = useState('')\n    const [password1, setPassword1] = useState('')\n    const [password2, setPassword2] = useState('')\n\n    const validation = ( name, pwd1, pwd2 ) => {\n        const errors = []\n\n        if (name.length < 6) {\n            errors.push({\"name\": \"username must be a least 6 characters\"})\n        } else if (pwd1 !== pwd2) {\n            errors.push({\"password\": \"passwords doesn't match\"})\n        }\n        return errors\n    }\n    const errors = validation(username, password1, password2)\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (errors.length > 0) {\n            return errors\n        }\n    }\n\n\n    return ( \n        <form className=\"form\" onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n                <label>Full Name:</label>\n                <input\n                    required\n                    autoFocus\n                    name=\"title\"\n                    type=\"text\"\n                    onChange={(e) => setUsername(e.target.value)}\n                />\n                {errors[\"username\"] && <span className=\"error\">{errors[username]}</span>}\n            </div>\n            <div className=\"form-group\">\n                <label>Email:</label>\n                <input\n                    required\n                    autoFocus\n                    name=\"title\"\n                    type=\"email\"\n                />\n            </div>\n            <div className=\"form-group\">\n                <label>Password:</label>\n                <input\n                    required\n                    autoFocus\n                    name=\"title\"\n                    type=\"text\"\n                    onChange={(e) => setPassword2(e.target.value)}\n                />\n                {errors[\"password\"] && <span className=\"error\">{errors[password]}</span>}\n            </div>\n            <div className=\"form-group\">\n                <label>Confirm Password:</label>\n                <input\n                    required\n                    autoFocus\n                    name=\"title\"\n                    type=\"text\"\n                    onChange={(e) => setPassword2(e.target.value)}\n                />\n                {errors[\"password\"] && <span className=\"error\">{errors[password]}</span>}\n            </div>\n            <input className=\"btn\" type=\"submit\" value=\"Register\" />\n        </form>\n    )\n}\nexport default Register\n"]},"metadata":{},"sourceType":"module"}