{"version":3,"sources":["components/layout/Navbar.js","components/layout/Preloader.js","components/note/Note.js","store/actions/noteActions.js","components/note/NotesListes.js","customhook/useInput.js","components/home/Form.js","components/home/Home.js","components/note/Favorites.js","components/note/NoteDetails.js","components/note/EditNote.js","App.js","store/reducers/noteReducer.js","store/reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["Navbar","className","href","id","to","Preloader","Note","note","dispatch","useDispatch","heartMarkup","favorite","style","cursor","onClick","getState","firestore","getFirebase","favStatus","collection","doc","update","then","console","log","catch","err","toggleFavorite","delete","deleteNote","title","content","moment","createdAt","toDate","fromNow","type","payload","NotesListes","notes","useState","loader","setLoader","useEffect","map","useInput","initialValue","value","setValue","reset","bind","onChange","e","target","Form","bindTitle","resetTitle","bindContent","resetContent","onSubmit","preventDefault","add","Date","htmlFor","Home","useFirestoreConnect","orderBy","useSelector","state","ordered","Favorites","where","storeAs","data","favNotes","index","push","NoteDetails","props","match","params","calendar","EditNote","history","useHistory","editNote","App","path","exact","component","initialState","note_to_edit","noteReducer","action","rootReducer","combineReducers","firebase","firebaseReducer","firestoreReducer","firebaseConfig","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","store","createStore","compose","applyMiddleware","thunk","withExtraArgument","getFirestore","reduxFirestore","rrfProps","config","createFirestoreInstance","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7ecf7b28.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst Navbar = () => {\n    return (\n        <nav className=\"green\">\n            <div className=\"nav\">\n                <a href=\"/\" className=\"brand-logo left\">CRUD</a>\n                <ul id=\"nav-mobile\" className=\"right brand\">\n                    <NavLink to=\"/favorites\">Favorite Note</NavLink>\n                </ul>\n            </div>\n        </nav>\n    )\n}\nexport default Navbar\n","import React from 'react'\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <div className=\"container section\">\r\n            <div className=\"preloader-wrapper center-align big active\">\r\n                <div className=\"spinner-layer spinner-blue-only\">\r\n                <div className=\"circle-clipper left\">\r\n                    <div className=\"circle\"></div>\r\n                </div><div className=\"gap-patch\">\r\n                    <div className=\"circle\"></div>\r\n                </div><div className=\"circle-clipper right\">\r\n                    <div className=\"circle\"></div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import moment from 'moment'\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { deleteNote, toggleFavorite } from '../../store/actions/noteActions'\r\n\r\nexport const Note = ({ note }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const deleteNoteHandler = () => {\r\n        dispatch(deleteNote(note))\r\n    }\r\n    const toggleFavoriteHandler = () => {\r\n        dispatch(toggleFavorite(note))\r\n    }\r\n    const editNoteHandler = () => {\r\n        dispatch({ type: 'EDIT_NOTE', payload: note })\r\n    }\r\n    const heartMarkup = note.favorite ? 'favorite' : 'favorite_border'\r\n\r\n    return (\r\n        <div className=\"note  white \">\r\n            <div className=\"right-align\">\r\n                <i className=\"material-icons red-text\" style={{ cursor: 'pointer' }} onClick={toggleFavoriteHandler}>{heartMarkup}</i>\r\n                <i className=\"material-icons\" style={{ cursor: 'pointer' }} onClick={deleteNoteHandler}>delete</i>\r\n            </div>\r\n            <Link to={\"/note/\" + note.id}>\r\n                <h5 className=\"black-text\"> {note?.title}</h5>\r\n            </Link>\r\n            <p className=\"truncate\">{note?.content}</p>\r\n            <p className=\"grey-text\">{moment(note.createdAt.toDate()).fromNow()}</p>\r\n            <div className=\"right-align\">\r\n                <Link to={`/edit/${note.id}}`} >\r\n                    <i className=\"material-icons black-text\" style={{ cursor: 'pointer' }} onClick={editNoteHandler}>edit</i>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","const addNote = (note) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firestore = getFirebase().firestore()\n        firestore\n            .collection(\"notes\")\n            .add({\n                ...note,\n                favorite: false,\n                createdAt: new Date()\n            })\n            .then(() => console.log('noted successfully add'))\n            .catch((err) => console.log(err))\n    }\n}\nconst deleteNote = (note) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase().firestore()\n        firebase\n            .collection('notes').doc(note.id)\n            .delete()\n            .then(() => console.log('note successfully'))\n            .catch((err) => console.log(err))\n    }\n}\nconst toggleFavorite = (note) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firestore = getFirebase().firestore()\n        const favStatus = !note.favorite\n        firestore\n            .collection('notes').doc(note.id)\n            .update({\n                favorite: favStatus\n            })\n            .then(() => console.log(\"Note state changed\"))\n            .catch(err => console.log(err))\n    }\n}\nconst getfavoritesNote = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firestore = getFirebase().firestore()\n        firestore\n            .collection('notes')\n            .get().then(snapchot => {\n                snapchot.doc.forEach(doc => console.log(doc))\n            })\n    }\n}\nconst editNote = (note) => {\n    return(dispatch, getState, {getFirebase}) => {\n        const firestore = getFirebase().firestore()\n        firestore\n            .collection('notes').doc(note.id)\n            .update({\n                title: note.title,\n                content: note.content,\n            })\n            .then(() => console.log(\"Note successfully edited\"))\n            .catch(err => console.log(err))\n\n    }\n}\nexport { addNote, deleteNote, toggleFavorite, getfavoritesNote, editNote }","import React, { useEffect, useState } from 'react'\r\nimport { Preloader } from '../layout/Preloader'\r\nimport { Note } from './Note'\r\n\r\nconst NotesListes = ({notes}) => {\r\n\r\n    const [loader, setLoader] = useState(true)\r\n    useEffect(() => {\r\n        if(notes){\r\n            setLoader(false)\r\n        }\r\n    }, [notes])\r\n    return (\r\n        <div className=\"noteslist\">\r\n        {   loader ?\r\n            <Preloader />    \r\n            :\r\n            notes.map(note =>\r\n\r\n            <Note note={note} key={note.id} />\r\n            )\r\n        }\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default NotesListes\r\n","import { useState } from \"react\"\n\nconst useInput = (initialValue = \"\" ) => {\n    const [value, setValue] = useState(initialValue)\n\n    const reset = () => {\n        setValue(initialValue)\n    }\n    const bind = {\n        value,\n        onChange: (e) => {\n            setValue(e.target.value)\n        }\n    }\n    return [value, bind, reset]\n}\n\nexport default useInput\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport useInput from '../../customhook/useInput'\nimport { addNote } from '../../store/actions/noteActions'\n\nconst Form = () => {\n    const [title, bindTitle, resetTitle] = useInput('')\n    const [content, bindContent, resetContent] = useInput('')\n    const dispatch = useDispatch()\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        dispatch(addNote({ title, content }))\n        resetTitle()\n        resetContent()\n    }\n    return (\n        <div className=\"section\">\n            <form onSubmit={handleSubmit} className=\"white\">\n                <h5 className=\"grey-text text-darken-3\">New Note</h5>\n                <div className=\"input-field \">\n                    <input id=\"first_name\" type=\"text\" className=\"validate\" {...bindTitle} />\n                    <label htmlFor=\"note_title\">Note Title</label>\n                </div>\n                <div className=\"input-field\">\n                    <textarea id=\"textarea1\" className=\"materialize-textarea\" {...bindContent}></textarea>\n                    <label htmlFor=\"textarea1\">Note Content</label>\n                </div>\n                <button className=\"btn green\">Add</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Form\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useFirestoreConnect } from 'react-redux-firebase'\nimport NotesListes from '../note/NotesListes'\nimport Form from './Form'\n\nconst Home = () => {\n    useFirestoreConnect([\n        { collection: 'notes',\n            orderBy: 'createdAt' \n        }\n         // or 'todos'\n      ])\n    const notes = useSelector((state) => state.firestore.ordered.notes)\n    return (\n        <div className=\"container \">\n            <div className=\"row center-align\">\n                <div className=\"col s7\"><Form /></div>\n                {notes && <div className=\"col s5\"><NotesListes notes={notes} /></div>}\n            </div>\n\n        </div>\n    )\n}\n\nexport default Home","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useFirestoreConnect } from 'react-redux-firebase'\r\nimport NotesListes from './NotesListes'\r\n\r\nexport const Favorites = () => {\r\n    useFirestoreConnect([\r\n        {   collection: 'notes',\r\n            where: [\"favorite\", \"==\", true],\r\n            orderBy: ['createdAt', 'desc'],\r\n            storeAs: \"favnotes\"\r\n        }\r\n        \r\n    ])\r\n    const data = useSelector((state) => state.firestore.data[\"favnotes\"])\r\n    const favNotes = []    \r\n    for (let index in data) {\r\n        favNotes.push({ id: index, ...data[index] })\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <NotesListes notes={favNotes} />\r\n        </div>\r\n    )\r\n}\r\n","import moment from 'moment'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useFirestoreConnect } from 'react-redux-firebase'\r\nimport { Preloader } from '../layout/Preloader'\r\n\r\nexport const NoteDetails = (props) => {\r\n    const id = props.match.params.id\r\n    \r\n    useFirestoreConnect([\r\n        {\r\n            collection: \"notes\",\r\n            doc: id\r\n        }\r\n    ])\r\n    const note = useSelector(({ firestore: { data } }) => data.notes && data.notes[id])\r\n   \r\n    return (\r\n        <div className=\"container section\">\r\n           { note ?\r\n                <div className=\"card z-depth-8\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{note.title}</span>\r\n                        <p>{note.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>{moment(note.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n                : <Preloader />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router'\r\nimport useInput from '../../customhook/useInput'\r\nimport { editNote } from '../../store/actions/noteActions'\r\n\r\nexport const EditNote = (props) => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const note = useSelector(state => state.note)\r\n\r\n    const [title, bindTitle, resetTitle] = useInput(note.title)\r\n    const [content, bindContent, resetContent] = useInput(note.content)\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        dispatch(editNote({ id: note.id, title, content }))\r\n        history.push('/')\r\n        resetTitle()\r\n        resetContent()\r\n    }\r\n    return (\r\n        <div className=\"section\">\r\n        <form onSubmit={handleSubmit} className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\">Edit Note</h5>\r\n            <div className=\"input-field \">\r\n                <input id=\"first_name\" type=\"text\" className=\"validate\" {...bindTitle} />\r\n                <label htmlFor=\"note_title\" className=\"active\">Note Title:</label>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <textarea id=\"textarea1\" className=\"materialize-textarea\" {...bindContent}></textarea>\r\n                <label htmlFor=\"textarea1\" className=\"active\">Note Content:</label>\r\n            </div>\r\n            <button className=\"btn green\">Edit</button>\r\n        </form>\r\n    </div>\r\n    )\r\n}\r\n","import './index.css'\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from './components/layout/Navbar'\nimport Home from './components/home/Home';\nimport { Favorites } from './components/note/Favorites';\nimport { NoteDetails } from './components/note/NoteDetails';\nimport { EditNote } from './components/note/EditNote';\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/favorites\" component={Favorites} />\n        <Route path=\"/note/:id\" component={NoteDetails} />\n        <Route path=\"/edit/:id\" component={EditNote} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App","const initialState = {\n    note_to_edit: {}\n}\nconst noteReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"EDIT_NOTE\":\n            console.log('note reducer', action.payload)\n            return action.payload;\n\n        default:\n            return state;\n    }\n}\nexport default noteReducer","import { combineReducers } from 'redux'\nimport { firebaseReducer } from 'react-redux-firebase'\nimport { firestoreReducer } from 'redux-firestore'\nimport noteReducer from './noteReducer'\n\n// Add firebase to reducers\nconst rootReducer = combineReducers({\n    note: noteReducer,\n    firebase: firebaseReducer,\n    firestore: firestoreReducer,\n})\nexport default rootReducer","import firebase from \"firebase\"\n\n// Initialize Firebase\nconst firebaseConfig = firebase.initializeApp({\n    apiKey: \"AIzaSyBqimwK2JATcbnTIVIRdXXapZ8wbTMWmpE\",\n    authDomain: \"evernote-clone-6879d.firebaseapp.com\",\n    projectId: \"evernote-clone-6879d\",\n    storageBucket: \"evernote-clone-6879d.appspot.com\",\n    messagingSenderId: \"975191138119\",\n    appId: \"1:975191138119:web:7a5e139d66478a602f3662\",\n});\nconst firestore = firebase.firestore()\n\nexport { firebaseConfig, firestore }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware, compose, } from \"redux\";\nimport thunk from 'redux-thunk'\nimport { Provider } from \"react-redux\";\nimport { getFirebase, ReactReduxFirebaseProvider } from 'react-redux-firebase'\nimport { getFirestore, createFirestoreInstance, reduxFirestore } from 'redux-firestore'\nimport rootReducer from './store/reducers/rootReducer';\nimport { firebaseConfig } from './config/firebaseConfig'\nimport firebase from 'firebase/app'\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebaseConfig) // redux bidings for firestore\n  )\n)\nconst rrfProps = {\n  firebase,\n  config: firebase,\n  dispatch: store.dispatch,\n  createFirestoreInstance // <- needed if using firestore\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}