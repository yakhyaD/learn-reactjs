{"version":3,"sources":["API.ts","images/background2.jpg","App.styles.ts","components/QuestionCard.styles.ts","components/QuestionCard.tsx","components/GameStart.tsx","components/ChooseCategory.styles.ts","components/ChooseCategory.tsx","components/ChooseLevel.styles.ts","components/ChooseLevel.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Difficulty","GlobalStyle","createGlobalStyle","BGImage","Wrapper","styled","div","ButtonWrapper","correct","userClicked","QuestionCard","questionNum","totalQuestions","question","answers","callback","userAnswer","className","dangerouslySetInnerHTML","__html","map","answer","correctAnswer","disabled","value","onClick","fetchQuizzQuestions","amount","difficulty","category","a","endpoint","fetch","response","json","data","results","shuffleAnswer","incorrect_answers","correct_answer","array","sort","Math","random","TOTAL_QUESTIONS","GameStart","props","history","useHistory","match","params","level","useState","loading","setLoading","questions","setQuestions","number","setNumber","userAnswers","setUserAnswers","score","setScore","gameOver","setGameOver","startGame","newQuestions","length","undefined","e","currentTarget","answerObject","prev","nextQ","console","log","push","categories","name","categoryNum","ChooseCategory","index","categroy","levels","ChooseLevel","chooseLevel","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b7c1b27.chunk.js","sourcesContent":["export type Question = {\r\n    category: string\r\n    type: string\r\n    difficulty: Difficulty\r\n    question: string\r\n    correct_answer: string\r\n    incorrect_answers: string[]\r\n}\r\nexport enum Difficulty  {\r\n\r\n    EASY = \"easy\",\r\n    MEDIUM = 'medium',\r\n    HARD = \"hard\",\r\n}\r\nexport type QuestionState = Question & {answers: string[]} \r\n\r\n\r\nexport const fetchQuizzQuestions = async (amount: number, difficulty: Difficulty, category: number): Promise<QuestionState[]> => {\r\n    const endpoint = `https://opentdb.com/api.php?amount=${amount}&category=${category}&difficulty=${difficulty}`\r\n    \r\n    const response = await fetch(endpoint)\r\n    const data = await response.json()\r\n    \r\n    return data.results.map((question: Question) => ({\r\n        ...question,\r\n        answers:  shuffleAnswer([...question.incorrect_answers, question.correct_answer])\r\n    }))\r\n}\r\nconst shuffleAnswer = (array: any[]) => {\r\n    return [...array].sort(() => Math.random() - 0.5)\r\n}\r\n/* \r\n    General Knowledge https://opentdb.com/api.php?amount=10&category=9\r\n    Science and Nature: https://opentdb.com/api.php?amount=10&category=17\r\n    Science: Computers : https://opentdb.com/api.php?amount=10&category=18\r\n    Science Mathematics: https://opentdb.com/api.php?amount=10&category=19\r\n    Mythologie: https://opentdb.com/api.php?amount=10&category=20\r\n    Sports: https://opentdb.com/api.php?amount=10&category=21\r\n    Georgraphy: https://opentdb.com/api.php?amount=10&category=22\r\n    History: https://opentdb.com/api.php?amount=10&category=23\r\n    Politics: https://opentdb.com/api.php?amount=10&category=24\r\n    Art: https://opentdb.com/api.php?amount=10&category=25\r\n    Celebrities: https://opentdb.com/api.php?amount=10&category=26\r\n    Animals: https://opentdb.com/api.php?amount=10&category=27\r\n    Vehicules: https://opentdb.com/api.php?amount=10&category=28\r\n    Science: Gadgets: https://opentdb.com/api.php?amount=10&category=30\r\n    Entertainment Japanese Animes & Mangas : https://opentdb.com/api.php?amount=10&category=31\r\n    Entertainment Cartoons & Animations: https://opentdb.com/api.php?amount=10&category=32\r\n*/","export default __webpack_public_path__ + \"static/media/background2.6510ec20.jpg\";","import styled, { createGlobalStyle } from 'styled-components';\r\nimport BGImage from './images/background2.jpg';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  html {\r\n    height: 100%;\r\n  }\r\n\r\n  body {\r\n    background-image: url(${BGImage});\r\n    background-size: cover;\r\n    margin: 0;\r\n    padding: 0 20px;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n\r\n\r\n  * {\r\n    font-family: 'Catamaran', sans-serif;\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  > p {\r\n    color: #fff;\r\n  }\r\n\r\n  .score {\r\n    color: #6eafb4;\r\n    font-size: 2rem;\r\n    margin: 0;\r\n  }\r\n\r\n  h1 {\r\n    font-family: Fascinate Inline;\r\n    background-image: linear-gradient(180deg, #fff, #87f1ff);\r\n    font-weight: 400;\r\n    background-size: 100%;\r\n    background-clip: text;\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n    -moz-background-clip: text;\r\n    -moz-text-fill-color: transparent;\r\n    filter: drop-shadow(2px 2px #0085a3);\r\n    font-size: 70px;\r\n    text-align: center;\r\n    margin: 20px;\r\n  }\r\n\r\n  .start, .next {\r\n    cursor: pointer;\r\n    background: linear-gradient(180deg, #ffffff, #ffcc91);\r\n    border: 2px solid #d38558;\r\n    box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.25);\r\n    border-radius: 10px;\r\n    height: 40px;\r\n    margin: 20px 0;\r\n    padding: 0 40px;\r\n    outline: none;\r\n  }\r\n\r\n  .start {\r\n    max-width: 200px;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  max-width: 1100px;\r\n  background: #ebfeff;\r\n  border-radius: 10px;\r\n  border: 2px solid #0085a3;\r\n  padding: 20px;\r\n  box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.25);\r\n  text-align: center;\r\n  margin: 15px auto;\r\n  p {\r\n    font-size: 1rem;\r\n  }\r\n\r\n`;\r\n\r\ntype ButtonWrapperProps = {\r\n  correct: boolean;\r\n  userClicked: boolean;\r\n};\r\n\r\nexport const ButtonWrapper = styled.div<ButtonWrapperProps>`\r\n  transition: all 0.3s ease;\r\n\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n\r\n  button {\r\n    cursor: pointer;\r\n    user-select: none;\r\n    font-size: 0.8rem;\r\n    width: 100%;\r\n    height: 40px;\r\n    margin: 5px 0;\r\n    background: ${({ correct, userClicked }) =>\r\n      correct\r\n        ? 'linear-gradient(90deg, #56FFA4, #59BC86)'\r\n        : !correct && userClicked\r\n        ? 'linear-gradient(90deg, #FF5656, #C16868)'\r\n        : 'linear-gradient(90deg, #56ccff, #6eafb4)'};\r\n    border: 3px solid #ffffff;\r\n    box-shadow: 1px 2px 0px rgba(0, 0, 0, 0.1);\r\n    border-radius: 10px;\r\n    color: #fff;\r\n    text-shadow: 0px 1px 0px rgba(0, 0, 0, 0.25);\r\n  }\r\n`;\r\n","import React from 'react'\r\nimport {Wrapper, ButtonWrapper} from './QuestionCard.styles'\r\nimport { answerObject } from './GameStart'\r\n\r\ntype Props = {\r\n    question: string\r\n    answers: string[]\r\n    callback: any\r\n    userAnswer: answerObject | undefined\r\n    questionNum: number\r\n    totalQuestions: number\r\n}\r\n\r\nconst QuestionCard: React.FC<Props> = ({\r\n    questionNum, \r\n    totalQuestions,\r\n    question, \r\n    answers, \r\n    callback, \r\n    userAnswer \r\n}) => {\r\n    return (\r\n        <Wrapper>\r\n            <p className='number'>\r\n                Question: {questionNum} / {totalQuestions}\r\n            </p>\r\n            <p dangerouslySetInnerHTML={{ __html: question }} />\r\n            <div>\r\n                {answers && answers.map((answer) => (\r\n                    <ButtonWrapper\r\n                    key={answer}\r\n                    correct={userAnswer?.correctAnswer === answer}\r\n                    userClicked={userAnswer?.answer === answer}\r\n                    >\r\n                    <button disabled={userAnswer ? true : false} value={answer} onClick={callback}>\r\n                        <span dangerouslySetInnerHTML={{ __html: answer }} />\r\n                    </button>\r\n                    </ButtonWrapper>\r\n                ))}\r\n            </div>\r\n        </Wrapper>\r\n    )\r\n}\r\nexport default QuestionCard\r\n","import React, { useState } from 'react';\r\nimport QuestionCard from './QuestionCard'\r\nimport {fetchQuizzQuestions, QuestionState } from '../API'\r\nimport { useHistory } from 'react-router';\r\n\r\nconst TOTAL_QUESTIONS = 10\r\n\r\nexport type answerObject = {\r\n  question: string\r\n  answer: string\r\n  correct: boolean\r\n  correctAnswer: string\r\n}\r\n\r\nconst GameStart = (props: any) => {\r\n    \r\n    const history = useHistory();\r\n    const {category} = props.match.params\r\n    const {level} = props.match.params\r\n    const [loading, setLoading] = useState(false)\r\n    const [questions, setQuestions] = useState<QuestionState[]>([])\r\n    const [number, setNumber] = useState(0)\r\n    const [userAnswers, setUserAnswers] = useState<answerObject[]>([])\r\n    const [score, setScore] = useState(0)\r\n    const [gameOver, setGameOver] = useState(true)\r\n\r\n    const startGame = async () => {\r\n        setLoading(true)\r\n        setGameOver(false)\r\n        const newQuestions = await fetchQuizzQuestions(TOTAL_QUESTIONS, level, category)\r\n        setQuestions(newQuestions)\r\n        setScore(0);\r\n        setUserAnswers([]);\r\n        setNumber(0);\r\n        setLoading(false);\r\n    }\r\n\r\n    const checkAnswer = (e: any) => {\r\n        if(!gameOver){\r\n        // useranswer\r\n        const answer = e.currentTarget.value\r\n        // Check if correct answer\r\n        const correct = answer === questions[number].correct_answer\r\n        // if correct increment score\r\n        if(correct) setScore(score => score + 1)\r\n        // save user answer\r\n        const answerObject = {\r\n            question: questions[number].question,\r\n            answer,\r\n            correct,\r\n            correctAnswer: questions[number].correct_answer\r\n        }\r\n        setUserAnswers(prev=> [...prev, answerObject]) \r\n\r\n        }\r\n    }\r\n\r\n    const nextQuestion =  () => {\r\n        const nextQ = number + 1\r\n        if(nextQ === TOTAL_QUESTIONS){\r\n        console.log('Game over')\r\n        setGameOver(true)\r\n        }\r\n        else {\r\n        setNumber(nextQ)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {(gameOver || userAnswers.length === TOTAL_QUESTIONS) ? <button className='start' onClick={startGame}>\r\n                {userAnswers.length === TOTAL_QUESTIONS ? \"Play Again\" : 'Start'}\r\n            </button> : null}\r\n            \r\n            { !gameOver ? <p className='score'>Score: {score}</p> : null }\r\n            {loading &&  <p>Loading Questions...</p> }\r\n            { !loading && !gameOver && number !== TOTAL_QUESTIONS &&\r\n            <QuestionCard\r\n                questionNum={number+1}\r\n                totalQuestions={TOTAL_QUESTIONS}\r\n                question={questions[number].question}\r\n                answers={questions[number].answers}\r\n                userAnswer={userAnswers ? userAnswers[number] : undefined}\r\n                callback={checkAnswer}\r\n            />\r\n            }\r\n            {!gameOver && !loading && userAnswers.length === number + 1 && number !== TOTAL_QUESTIONS - 1 ? (\r\n            <button className='next' onClick={nextQuestion}>\r\n                Next Question\r\n            </button>) : null\r\n\r\n            }\r\n            {(!gameOver && userAnswers.length === TOTAL_QUESTIONS) ?\r\n                (<div >\r\n                    <button className='next' onClick={() => {history.push(\"/\")}}>\r\n                        Play another category\r\n                    </button>\r\n                    <button className='next' onClick={() => {history.push(`/${category}`)}}>\r\n                        Change level\r\n                    </button>\r\n                </div>) : null\r\n            }\r\n        </>\r\n    );\r\n}\r\nexport default GameStart ","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  min-width: 600px;\r\n  background: #ebfeff;\r\n  border-radius: 10px;\r\n  border: 2px solid #0085a3;\r\n  padding: 20px;\r\n  box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.25);\r\n  text-align: center;\r\n\r\n  p {\r\n    font-size: 1rem;\r\n  }\r\n  h1 {\r\n    font-size: 40px;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  transition: all 0.3s ease;\r\n\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n\r\n  button {\r\n    cursor: pointer;\r\n    user-select: none;\r\n    font-size: 0.8rem;\r\n    width: 100%;\r\n    height: 40px;\r\n    margin: 5px 0;\r\n    background:'linear-gradient(90deg, #56ccff, #6eafb4)'};\r\n    border: 3px solid #ffffff;\r\n    box-shadow: 1px 2px 0px rgba(0, 0, 0, 0.1);\r\n    border-radius: 10px;\r\n    color: #fff;\r\n    text-shadow: 0px 1px 0px rgba(0, 0, 0, 0.25);\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Wrapper, ButtonWrapper } from './ChooseCategory.styles';\r\n\r\nconst categories = [\r\n    {name:'General Knowledge', categoryNum: 9},\r\n    {name:'Science: Computers', categoryNum: 18},\r\n    {name:'Science and Nature', categoryNum: 17}, \r\n    {name:'Mythologie', categoryNum: 20}, \r\n    {name: 'Sports', categoryNum: 21},\r\n    {name:'Entertainment Japanese Animes & Mangas', categoryNum: 31}, \r\n    {name: 'Entertainment Cartoons & Animations', categoryNum: 32},\r\n]\r\n\r\nfunction ChooseCategory() {\r\n    const history = useHistory();\r\n    const chooseCategory = (categroy: number) => {\r\n        history.push(`/${categroy}`)\r\n    }  \r\n    \r\n    return (\r\n        <Wrapper>\r\n            <h1>Choose Category</h1>\r\n            <div>\r\n                {categories.map((category, index) => (\r\n                    <ButtonWrapper key={index}>\r\n                        <button onClick={() => chooseCategory(category.categoryNum)}>\r\n                            <span dangerouslySetInnerHTML={{ __html: category.name }} />\r\n                        </button>\r\n                    </ButtonWrapper>\r\n                ))\r\n\r\n                }\r\n            </div>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default ChooseCategory;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  min-width: 500px;\r\n  max-width: 1100px;\r\n  background: #ebfeff;\r\n  border-radius: 10px;\r\n  border: 2px solid #0085a3;\r\n  padding: 30px 20px ;\r\n  box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.25);\r\n  text-align: center;\r\n\r\n  h1 {\r\n    font-size: 60px;\r\n  }\r\n\r\n  p {\r\n    font-size: 1rem;\r\n  }\r\n  h1 {\r\n    font-size: 40px;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  transition: all 0.3s ease;\r\n\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n\r\n  button {\r\n    cursor: pointer;\r\n    user-select: none;\r\n    font-size: 0.8rem;\r\n    width: 100%;\r\n    height: 40px;\r\n    margin: 5px 0;\r\n    background:'linear-gradient(90deg, #56ccff, #6eafb4)'};\r\n    border: 3px solid #ffffff;\r\n    box-shadow: 1px 2px 0px rgba(0, 0, 0, 0.1);\r\n    border-radius: 10px;\r\n    color: #fff;\r\n    text-shadow: 0px 1px 0px rgba(0, 0, 0, 0.25);\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { Wrapper, ButtonWrapper } from './ChooseLevel.styles';\r\n\r\nconst levels = ['easy', \"medium\", \"hard\"]\r\n\r\nconst ChooseLevel = (props: any) => {\r\n  \r\n  const history = useHistory();\r\n  const category = props.match.params.category\r\n\r\n  const chooseLevel = (level: string) => {\r\n    history.push(`/${category}/${level}`)\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n        <h1>Choose level</h1>\r\n        <div>\r\n          {levels.map((level, index) => (\r\n              <ButtonWrapper key={index}>\r\n                  <button onClick={() => chooseLevel(level)}>\r\n                      <span dangerouslySetInnerHTML={{ __html: level }} />\r\n                  </button>\r\n              </ButtonWrapper>\r\n          ))\r\n\r\n          }\r\n        </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default ChooseLevel;\r\n","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport { GlobalStyle, Wrapper } from \"./App.styles\";\nimport GameStart from './components/GameStart';\nimport ChooseCategory from './components/ChooseCategory';\nimport ChooseLevel from './components/ChooseLevel';\n\n\nfunction App() {\n \n  return (\n    <Router>\n      <GlobalStyle />\n      <Wrapper>\n        <h1>REACT QUIZ</h1>\n        <Switch>\n          <Route  path=\"/\" exact component={ChooseCategory} />\n          <Route  path=\"/:category\" exact component={ChooseLevel} />\n          <Route  path=\"/:category/:level\" component={GameStart} />\n        </Switch>\n      </Wrapper>\n    </Router>\n     \n  );\n}\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}